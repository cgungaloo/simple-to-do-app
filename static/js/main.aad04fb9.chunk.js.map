{"version":3,"sources":["components/ToDoItem.js","components/ToDoList.js","components/Header.js","components/InputToDo.js","components/ToDoContainer.js","index.js"],"names":["ToDoItem","alert","this","props","todo","completed","id","title","className","type","checked","onChange","handleChangeProps","onClick","deleteToDo","style","fontStyle","color","opacity","textDecoration","React","Component","TodosList","todos","map","Header","prevProps","prevState","bgColor","Math","floor","random","headerSpan","document","getElementById","innerHTML","backgroundColor","padding","lineHeight","fontSize","marginBottom","InputToDo","state","e","setState","target","name","value","handleSubmit","preventDefault","addToDoProps","onSubmit","placeholder","TodoContainer","show","handleChange","axios","delete","then","response","filter","addTodoItem","post","data","get","ToDoList","ReactDOM","render"],"mappings":"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","file":"static/js/main.aad04fb9.chunk.js","sourcesContent":["import React from \"react\"\n\nclass ToDoItem extends React.Component {\n\n    componentWillUnmount() {\n        alert(\"Item about to be deleted!\");\n      }\n      \n    render() {\n        const completedStyle = {\n            fontStyle: \"italic\",\n            color: \"#d35e0f\",\n            opacity: 0.4,\n            textDecoration: \"line-through\"\n        }\n\n        const { completed, id, title } = this.props.todo\n        return (\n            <div>\n                <li className=\"todo-item\">\n                    <input type=\"checkbox\"\n                    checked={completed}\n                    onChange={() => this.props.handleChangeProps(id)} />\n                    <button onClick={() => this.props.deleteToDo(id)}>Delete</button>\n                    <span style={completed ? completedStyle : null}>\n                        {title}    \n                    </span>\n                </li>\n            </div>\n        )\n    }ÃŸ\n}\nexport default ToDoItem","import React from \"react\"\nimport TodoItem from \"./ToDoItem\"\n\nclass TodosList extends React.Component {\n    render() {\n        return (\n            <div>\n                {this.props.todos.map(todo => (\n                    <TodoItem\n                        key={todo.id}\n                        todo={todo}\n                        handleChangeProps={this.props.handleChangeProps}\n                        deleteToDo={this.props.deleteToDo} />\n                ))}\n            </div>\n        )\n    }\n}\n\nexport default TodosList","import React, { Component } from \"react\"\n\nclass Header extends Component {\n\n    componentDidUpdate(prevProps, prevState){\n        var x = Math.floor(Math.random() * 256);\n        var y = Math.floor(Math.random() * 256);\n        var z = Math.floor(Math.random() * 256);\n        var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\n\n        if (prevProps.headerSpan !== this.props.headerSpan){\n            document.getElementById(\"inH1\").innerHTML = \"checked\";\n            document.getElementById(\"inH1\").style.backgroundColor = bgColor;\n        }\n    }\n\n    render() {\n        const headerStyle = {\n            padding: \"30px 0\",\n            lineHeight: \"2em\",\n        }\n        return(\n            <header style={headerStyle}>\n                <h1 style={{ fontSize: \"50px\", marginBottom: \"15px\" }}>Simple ToDoApp <span id=\"inH1\"></span></h1>\n                <p style={{ fontSize: \"19px\" }}>Please add to do items thtough the input field</p>\n            </header>\n        )\n    }\n}\nexport default Header","import React, { Component } from \"react\"\n\n// Getting input from user interaction therefore component will be class\nclass InputToDo extends Component {\n\n    state = {\n        title: \"\"\n    }\n\n    onChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.addToDoProps(this.state.title);\n        this.setState({\n            title: \"\"\n        });\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} className=\"form-container\">\n                <input type=\"text\"\n                    placeholder=\"Add Todo...\"\n                    value={this.state.title}\n                    onChange={this.onChange}\n                    name=\"title\"></input>\n                <input type=\"submit\" value=\"Submit\" className=\"input-submit\"></input>\n            </form>\n        )\n    }\n}\nexport default InputToDo","import React from \"react\"\nimport ToDoList from \"./ToDoList\"\nimport Header from \"./Header\"\nimport InputToDo from \"./InputToDo\"\nimport axios from 'axios';\n\nclass TodoContainer extends React.Component {\n\n    state = {\n        todos: [],\n        show: false\n    };\n\n    handleChange = (id) => {\n        this.setState(prevState => ({\n            todos: prevState.todos.map((todo) => {\n                if (todo.id === id) {\n                    todo.completed = !todo.completed;\n                }\n                return todo;\n            }),\n            show: !this.state.show\n        }));\n    };\n\n    deleteToDo = id => {\n        axios\n            .delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n            .then(response => \n                this.setState({\n                    todos: [\n                        ...this.state.todos.filter(todo =>{\n                            return todo.id !== id\n                        }),\n                    ],\n                }))\n    }\n\n    addTodoItem = title => {\n        axios\n            .post(\"https://jsonplaceholder.typicode.com/todos\", {\n            title: title,\n            completed: false,\n        })\n        .then(response => \n            this.setState({\n                todos: [...this.state.todos, response.data],\n            }))\n    }\n\n    componentDidMount(){\n        axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\n        .then(response => this.setState({ todos: response.data}))\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Header headerSpan={this.state.show}/>\n                <InputToDo addToDoProps={this.addTodoItem} />\n                <ToDoList todos={this.state.todos}\n                    handleChangeProps={this.handleChange}\n                    deleteToDo={this.deleteToDo}\n                />\n            </div>\n        );\n    }\n}\nexport default TodoContainer","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport TodoContainer from \"./components/ToDoContainer\"\nimport \"./App.css\"\nReactDOM.render(<TodoContainer />, document.getElementById(\"root\"))"],"sourceRoot":""}