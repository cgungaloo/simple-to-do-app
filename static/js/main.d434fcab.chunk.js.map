{"version":3,"sources":["components/ToDoItem.js","components/ToDoList.js","components/Header.js","components/InputToDo.js","components/ToDoContainer.js","index.js"],"names":["ToDoItem","props","todo","completed","id","title","useEffect","alert","className","type","checked","onChange","handleChangeProps","onClick","deleteToDoProps","style","fontStyle","color","opacity","textDecoration","ToDoList","todos","map","Header","isInitialMount","useRef","console","log","bgColor","Math","floor","random","current","document","getElementById","innerHTML","backgroundColor","headerSpan","padding","lineHeight","fontSize","marginBottom","InputTodo","useState","inputText","setInputText","onSubmit","e","preventDefault","addToDoProps","placeholder","value","target","name","TodoContainer","setToDos","show","setShow","axios","get","then","response","data","newTodo","uuidv4","filter","ReactDOM","render"],"mappings":"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","file":"static/js/main.d434fcab.chunk.js","sourcesContent":["import React, { useEffect } from \"react\"\n\nconst ToDoItem = props => {\n  const completedStyle = {\n    fontStyle: \"italic\",\n    color: \"#d35e0f\",\n    opacity: 0.4,\n    textDecoration: \"line-through\",\n  }\n\n  const { completed, id, title } = props.todo\n\n  useEffect(() => {\n    return () => {\n      alert(\"Item about to be deleted!\")\n    }\n  }, [])\n\n  return (\n    <li className=\"todo-item\">\n      <input\n        type=\"checkbox\"\n        checked={completed}\n        onChange={() => props.handleChangeProps(id)}\n      />\n      <button onClick={() => props.deleteToDoProps(id)}>Delete</button>\n      <span style={completed ? completedStyle : null}>{title}</span>\n    </li>\n  )\n}\n\nexport default ToDoItem\n","import React from \"react\"\nimport TodoItem from \"./ToDoItem\"\n\nconst ToDoList = props => {\n  return (\n    <div>\n      {props.todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          handleChangeProps={props.handleChangeProps}\n          deleteToDoProps={props.deleteToDoProps}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default ToDoList","import React, { useEffect, useRef } from \"react\"\n\nconst Header = props => {\n  const headerStyle = {\n    padding: \"20px 0\",\n    lineHeight: \"2em\",\n  }\n\n  const isInitialMount = useRef(true)\n  console.log(isInitialMount);\n\n  useEffect(() => {\n    var x = Math.floor(Math.random() * 256)\n    var y = Math.floor(Math.random() * 256)\n    var z = Math.floor(Math.random() * 256)\n    var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\"\n  \n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      document.getElementById(\"inH1\").innerHTML = \"clicked\";\n      document.getElementById(\"inH1\").style.backgroundColor = bgColor;\n    }\n\n  }, [props.headerSpan])\n\n  return (\n    <header style={headerStyle}>\n      <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>\n        Simple Todo App <span id=\"inH1\"></span>\n      </h1>\n      <p style={{ fontSize: \"19px\" }}>\n        Please add to-dos item(s) through the input field\n      </p>\n    </header>\n  )\n}\n\nexport default Header","import React, { useState } from \"react\"\n\nconst InputTodo = props => {\n    const [inputText, setInputText] = useState({\n        title:\"\",\n    })\n\n    const onChange = e => {\n        setInputText({\n            ...inputText,\n            [e.target.name]: e.target.value,\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        props.addToDoProps(inputText.title)\n        setInputText({\n          title: \"\",\n        })\n    }\n\n    return (\n        <form onSubmit={handleSubmit} className=\"form-container\">\n            <input type=\"text\"\n                placeholder=\"Add Todo...\"\n                value={inputText.title}\n                onChange={onChange}\n                name=\"title\"></input>\n            <input type=\"submit\" value=\"Submit\" className=\"input-submit\"></input>\n        </form>\n    )\n}\n\nexport default InputTodo","import React, { useState, useEffect } from \"react\"\nimport ToDoList from \"./ToDoList\"\nimport Header from \"./Header\"\nimport InputTodo from \"./InputToDo\"\nimport axios from \"axios\"\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst TodoContainer = props => {\n    const [todos, setToDos] = useState([])\n    const [show, setShow] = useState(false)\n\n    const handleChange = id => {\n        setToDos(\n            todos.map(todo => {\n                if (todo.id === id) {\n                    todo.completed = !todo.completed\n                }\n                return todo\n            })\n        )\n        setShow(!show)\n    }\n\n    const deleteToDo = id => {\n        setToDos([\n            ...todos.filter(todo => {\n                return todo.id !== id\n            }),\n        ])\n    }\n\n    const addToDoItem = title => {\n        const newTodo = {\n            id: uuidv4,\n            title: title,\n            completed: false,\n        }\n        setToDos([...todos, newTodo])\n    }\n\n    useEffect(() => {\n        console.log(\"test run\")\n        axios\n            .get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\n            .then(response => setToDos(response.data))\n    }, [])\n\n    return (\n        <div className=\"container\">\n            <Header headerSpan={show} />\n            <InputTodo addToDoProps={addToDoItem} />\n            <ToDoList\n                todos={todos}\n                handleChangeProps={handleChange}\n                deleteToDoProps={deleteToDo}\n            />\n        </div>\n    )\n}\n\nexport default TodoContainer","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport TodoContainer from \"./components/ToDoContainer\"\nimport \"./App.css\"\nReactDOM.render(<TodoContainer />, document.getElementById(\"root\"))"],"sourceRoot":""}